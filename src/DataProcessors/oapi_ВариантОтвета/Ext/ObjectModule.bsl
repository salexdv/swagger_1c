#Область ОписаниеПеременных

Перем ТипыДанных;
Перем Примеры;
Перем Заголовки;

#КонецОбласти

#Область ПрограммныйИнтерфейс

#Область УправлениеСтруктурой

// Добавляет в вариант ответа данные
//
// Параметры:
//  Данные		 - Прозвольный	 - ТипСтруктура, ТипМассив, ТипСтрока
//  ТипДанных	 - Строка	 - Тип возвращаемых даных
// 
// Возвращаемое значение:
//  oapi_ВариантОтвета - ссылка на вариант ответа
//
Функция ДобавитьДанные(Данные, ТипДанных = "application/json") Экспорт
	
	Если Не ЗначениеЗаполнено(ТипДанных) Тогда
		ТекстОшибки = НСтр("ru='Не указан тип данных.'");
		ВызватьИсключение(ТекстОшибки);
	КонецЕсли;
	
	Если Не Обработки.oapi_Сервис.ЭтоРасширенныйТипДанных(Данные) Тогда
		ТекстОшибки = НСтр("ru='В качестве данных должен выступать расширенный тип, например ТипСтруктура, ТипМассив, ТипЧисло.'");
		ВызватьИсключение(ТекстОшибки);
	КонецЕсли;
	
	Если Данные = Неопределено Тогда
		ТипыДанных.Удалить(ТипДанных);
	Иначе
		ТипыДанных[ТипДанных] = Данные;
	КонецЕсли;
	
	Возврат ЭтотОбъект;
	
КонецФункции

// Добавляет в вариант ответа заголовок
//
// Параметры:
//  ИмяЗаголовка - Строка	 - Имя заголовка
//  ТипДанных	 - Строка	 - Тип данных заголовка
//  Описание	 - Строка	 - Описание заголовка
// 
// Возвращаемое значение:
//  oapi_ВариантОтвета - ссылка на вариант ответа
//
Функция ДобавитьЗаголовок(ИмяЗаголовка, ТипДанных = "string", Описание = "") Экспорт
	
	Если Не ЗначениеЗаполнено(ИмяЗаголовка) Тогда
		ТекстОшибки = НСтр("ru='Не указано имя заголовка.'");
		ВызватьИсключение(ТекстОшибки);
	КонецЕсли;
	
	Заголовок = Заголовки[ИмяЗаголовка];
	
	Если Заголовок = Неопределено Тогда
		Заголовок = Обработки.oapi_Заголовок.Создать();
		Заголовок.ИмяЗаголовка = ИмяЗаголовка;
		Заголовок.Сервис = Сервис;
		Заголовок.Владелец = ЭтотОбъект;
		Заголовки[ИмяЗаголовка] = Заголовок;
	КонецЕсли;
	
	Заголовок.Тип      = ТипДанных;
	Заголовок.Описание = Описание;
	
	Возврат ЭтотОбъект;
	
КонецФункции

// Добавляет в вариант ответа пример
//
// Параметры:
//  ИмяПримера		- Строка 		- Имя примера
//  ДанныеПримера	- Произвольный	- ТипСтруктура/Структура, ТипМассив/Массив
//  Описание	 	- Строка	 	- Описание примера
// 
// Возвращаемое значение:
//  oapi_ВариантОтвета - ссылка на вариант ответа
//
Функция ДобавитьПример(ИмяПримера, ДанныеПримера, ТипДанных = "application/json") Экспорт
	
	Если Примеры[ТипДанных] = Неопределено Тогда
		Примеры[ТипДанных] = Новый Соответствие
	КонецЕсли;
	
	Примеры[ТипДанных][ИмяПримера] = ДанныеПримера;
	
	Возврат ЭтотОбъект;
	
КонецФункции

// Добавляет в вариант ответа пример
//
// Параметры:
//  ИмяПримера		- Строка 	- Имя примера
//  СтрокаJSON		- Строка	- Строка в формате JSON, содержащая данные примера
//  ТипДанных	 	- Строка	- Тип возвращаемых данных
// 
// Возвращаемое значение:
//  oapi_ВариантОтвета - ссылка на вариант ответа
//
Функция ДобавитьПримерJSON(ИмяПримера, СтрокаJSON, ТипДанных = "application/json") Экспорт
	
	Если Примеры[ТипДанных] = Неопределено Тогда
		Примеры[ТипДанных] = Новый Соответствие
	КонецЕсли;
	
	Примеры[ТипДанных][ИмяПримера] = oapi_ОбщегоНазначения.ДесериализоватьДанные(СтрокаJSON);
	
	Возврат ЭтотОбъект;
	
КонецФункции

Функция ТипыДанных() Экспорт
	
	Возврат ТипыДанных;
	
КонецФункции

Функция Заголовки() Экспорт
	
	Возврат Заголовки;
	
КонецФункции

Функция Примеры() Экспорт
	
	Возврат Примеры;
	
КонецФункции

Функция ПримерыПоТипуДаных(ТипДанных) Экспорт
	
	Если Примеры[ТипДанных] = Неопределено Тогда
		Возврат Новый Соответствие;
	Иначе
		Возврат Примеры[ТипДанных];
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область ФормированиеОписания

Функция ПолучитьОписание() Экспорт
	
	ОписаниеОтвета = Новый Структура();
	ОписаниеОтвета.Вставить("content", Новый Соответствие);
	ОписаниеОтвета.Вставить("description", КраткоеОписание);
	
	Заголовки = Новый Соответствие();
	
	Для Каждого Заголовок Из Заголовки() Цикл
		ОписаниеЗаголовка = Новый Структура("type", Заголовок.Значение.Тип);
		ОписаниеДанных = Новый Структура("schema, description", ОписаниеЗаголовка, Заголовок.Значение.Описание);
		Заголовки.Вставить(Заголовок.Ключ, ОписаниеДанных);
	КонецЦикла;
	
	Если 0 < Заголовки.Количество() Тогда
		ОписаниеОтвета.Вставить("headers", Заголовки);
	Конецесли;
	
	Для Каждого ДанныеОтвета Из ТипыДанных() Цикл
		
		ОписаниеДанных = oapi_Описание.ПолучитьОписаниеДанных(ДанныеОтвета.Значение, Сервис);
		ОписаниеДанных.Удалить("component");
		ОписаниеДанных.Удалить("required");
		ОписаниеДанных.Удалить("description");
		
		Если ОписаниеДанных["type"] = "object" Тогда
			ОписаниеДанных.Удалить("type");
			Если Не Сервис.ИспользоватьСхемыДанных Тогда
				ОписаниеДанных = Новый Структура("schema", ОписаниеДанных);
			КонецЕсли;
		Иначе
			ОписаниеДанных = Новый Структура("schema", ОписаниеДанных);
		КонецЕсли;
		
		Если 0 < ПримерыПоТипуДаных(ДанныеОтвета.Ключ).Количество() Тогда
			
			ОписаниеДанных.Вставить("examples", Новый Соответствие);
			
			Для Каждого Пример Из ПримерыПоТипуДаных(ДанныеОтвета.Ключ) Цикл
				ОписаниеДанных["examples"][Пример.Ключ] = Новый Структура("value", Сервис.ПреобразоватьДанныеВТипы1С(Пример.Значение));
			КонецЦикла;
			
		КонецЕсли;
		
		ОписаниеОтвета.content.Вставить(ДанныеОтвета.Ключ, ОписаниеДанных);
		
	КонецЦикла;
	
	Если ОписаниеОтвета.content.Количество() = 0 Тогда
		ОписаниеОтвета.Удалить("content");
	КонецЕсли;
	
	Возврат ОписаниеОтвета;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область Инициализация

ТипыДанных = Новый Соответствие();
Примеры = Новый Соответствие();
Заголовки = Новый Соответствие();

#КонецОбласти